//! SeaORM Entity. Generated by sea-orm-codegen 0.9.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "servers")]
pub struct Model {
    pub prefix: Option<String>,
    pub locale: Option<String>,
    pub logging_channel: Option<i64>,
    pub streams_channel: Option<String>,
    pub notify: i32,
    pub monthly_clarifai_cap: i32,
    pub clarifai_count: i32,
    pub clarifai_reset_date: Option<chrono::DateTime<chrono::Utc>>,
    #[sea_orm(primary_key, auto_increment = false, unique)]
    pub id: u64,
    pub pin_emoji_unicode: Option<String>,
    pub pin_emoji_custom: Option<i64>,
    pub pin_threshold: Option<i32>,
    pub pin_channel: Option<i64>,
    pub pin_editable: Option<i8>
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl ActiveModelBehavior for ActiveModel {}
