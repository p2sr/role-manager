//! SeaORM Entity. Generated by sea-orm-codegen 0.9.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "filters")]
pub struct Model {
    #[sea_orm(primary_key, unique)]
    pub id: i32,
    #[sea_orm(column_type = "Custom(\"MEDIUMTEXT\".to_owned())", nullable)]
    pub name: Option<String>,
    pub enabled: i8,
    pub server: i64,
    pub creator: Option<i64>,
    #[sea_orm(column_type = "Custom(\"TINYTEXT\".to_owned())")]
    pub r#type: String,
    #[sea_orm(column_type = "Custom(\"MEDIUMTEXT\".to_owned())", nullable)]
    pub type_settings: Option<String>,
    pub server_scope: i8,
    #[sea_orm(column_type = "Custom(\"MEDIUMTEXT\".to_owned())", nullable)]
    pub server_scope_settings: Option<String>,
    pub user_scope: i8,
    #[sea_orm(column_type = "Custom(\"MEDIUMTEXT\".to_owned())", nullable)]
    pub user_scope_settings: Option<String>,
    #[sea_orm(column_type = "Custom(\"MEDIUMTEXT\".to_owned())")]
    pub effect: String
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl ActiveModelBehavior for ActiveModel {}
